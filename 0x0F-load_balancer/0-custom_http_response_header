#!/usr/bin/env bash
# This bash script is used to configure a server so that it works as a backup of another server

# The first step is to install nginx on the new server
sudo apt-get update
sudo apt-get -y install nginx

# The second step is to set the firewall to allow listening for HTTP requests on port 80
sudo ufw allow 'Nginx HTTP'

sudo mkdir -p /var/www/html

# The third step is to enable easy creation of files in the new server
sudo chmod -R 755 /var/www

# The fourth step is to setup an index web file and save in the new server
echo 'Hello World!' |sudo tee  /var/www/html/index.html

# The fifth step is to ensure the 404 error is generated when it actually happens
echo "Ceci n'est pas une page" |sudo tee /var/www/html/404.html

# The sixth step is to handle redirections
string_for_replacement="server_name _;\n\tadd_header X-Served-By \$hostname;\n\trewrite ^\/redirect_me https:\/\/etinosanomaosaghae.blogspot.com permanent;"
sudo sed -i "s/server_name _;/$string_for_replacement/" /etc/nginx/sites-enabled/default

# The seventh step is to handle further redirection instruction to listen for replacement webpage
string_for_replacement="listen 80 default_server;\n\terror_page 404 \/404.html;\n\tlocation = \/404.html {\n\t\troot \/var\/www\/html;\n\t\tinternal;\n\t}"
sudo sed -i "s/listen 80 default_server;/$string_for_replacement/" /etc/nginx/sites-enabled/default

# The eight step is to restart the server after it has been configured
sudo service nginx restart
